/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.design;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import project.controller.GenerateIdController;
import project.controller.GradeController;
import project.controller.ValidationController;
import project.model.Grade;

/**
 *
 * @author 
 */
public class ManageGrade extends javax.swing.JFrame {

    /**
     * Creates new form ManageGrade
     */
    ArrayList<Grade> allGrades;
    
    public ManageGrade() {
        initComponents();
        generateGradeId();
        viewAllGrade();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackGround = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        panelManageGrade = new javax.swing.JPanel();
        labelGade = new javax.swing.JLabel();
        labelGadeId = new javax.swing.JLabel();
        textGrade = new javax.swing.JTextField();
        textGradeID = new javax.swing.JTextField();
        labelRegisterGrade = new javax.swing.JLabel();
        labelRemoveGrade = new javax.swing.JLabel();
        panelViewAllGrade = new javax.swing.JPanel();
        scrollPaneViewAllGrade = new javax.swing.JScrollPane();
        tableViewAllGrade = new javax.swing.JTable();
        labelManageClass = new javax.swing.JLabel();
        labelBackToFirstPage = new javax.swing.JLabel();
        labelBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 0, 0));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Manage Grade");
        panelBackGround.add(labelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 410, 60));

        panelManageGrade.setBackground(new java.awt.Color(153, 153, 255));
        panelManageGrade.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Grade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(0, 0, 102))); // NOI18N

        labelGade.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelGade.setText("Grade");

        labelGadeId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelGadeId.setText("Grade ID");

        textGrade.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textGradeActionPerformed(evt);
            }
        });
        textGrade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textGradeKeyTyped(evt);
            }
        });

        textGradeID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        labelRegisterGrade.setBackground(new java.awt.Color(255, 0, 0));
        labelRegisterGrade.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelRegisterGrade.setForeground(new java.awt.Color(255, 255, 255));
        labelRegisterGrade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRegisterGrade.setText("Register Grade");
        labelRegisterGrade.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 51, 51), new java.awt.Color(102, 0, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelRegisterGrade.setOpaque(true);
        labelRegisterGrade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRegisterGradeMouseClicked(evt);
            }
        });

        labelRemoveGrade.setBackground(new java.awt.Color(255, 0, 0));
        labelRemoveGrade.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelRemoveGrade.setForeground(new java.awt.Color(255, 255, 255));
        labelRemoveGrade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRemoveGrade.setText("Remove Grade");
        labelRemoveGrade.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 51, 51), new java.awt.Color(102, 0, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelRemoveGrade.setOpaque(true);
        labelRemoveGrade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRemoveGradeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelManageGradeLayout = new javax.swing.GroupLayout(panelManageGrade);
        panelManageGrade.setLayout(panelManageGradeLayout);
        panelManageGradeLayout.setHorizontalGroup(
            panelManageGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManageGradeLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panelManageGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelGadeId, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(labelGade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelManageGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textGradeID, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(133, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelManageGradeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelManageGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelRemoveGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRegisterGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(177, 177, 177))
        );
        panelManageGradeLayout.setVerticalGroup(
            panelManageGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManageGradeLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelManageGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGade)
                    .addComponent(textGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelManageGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGadeId)
                    .addComponent(textGradeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addComponent(labelRegisterGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(labelRemoveGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        panelBackGround.add(panelManageGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 550, 370));

        panelViewAllGrade.setBackground(new java.awt.Color(153, 153, 255));
        panelViewAllGrade.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View All Grade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(0, 0, 102))); // NOI18N

        tableViewAllGrade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Grade ID", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableViewAllGrade.setGridColor(new java.awt.Color(204, 204, 204));
        scrollPaneViewAllGrade.setViewportView(tableViewAllGrade);
        if (tableViewAllGrade.getColumnModel().getColumnCount() > 0) {
            tableViewAllGrade.getColumnModel().getColumn(0).setPreferredWidth(150);
            tableViewAllGrade.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        javax.swing.GroupLayout panelViewAllGradeLayout = new javax.swing.GroupLayout(panelViewAllGrade);
        panelViewAllGrade.setLayout(panelViewAllGradeLayout);
        panelViewAllGradeLayout.setHorizontalGroup(
            panelViewAllGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewAllGradeLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(scrollPaneViewAllGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        panelViewAllGradeLayout.setVerticalGroup(
            panelViewAllGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewAllGradeLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(scrollPaneViewAllGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        panelBackGround.add(panelViewAllGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 190, 470, 370));

        labelManageClass.setBackground(new java.awt.Color(255, 0, 0));
        labelManageClass.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelManageClass.setForeground(new java.awt.Color(255, 255, 255));
        labelManageClass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelManageClass.setText("Manage Class");
        labelManageClass.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 51, 51), new java.awt.Color(102, 0, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelManageClass.setOpaque(true);
        labelManageClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelManageClassMouseClicked(evt);
            }
        });
        panelBackGround.add(labelManageClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 600, 172, 40));

        labelBackToFirstPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gif/home-animated-blue-1.gif"))); // NOI18N
        labelBackToFirstPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBackToFirstPageMouseClicked(evt);
            }
        });
        panelBackGround.add(labelBackToFirstPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        labelBackGround.setBackground(new java.awt.Color(0, 0, 153));
        labelBackGround.setOpaque(true);
        panelBackGround.add(labelBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textGradeActionPerformed
        searchGrade();
    }//GEN-LAST:event_textGradeActionPerformed

    private void labelRegisterGradeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRegisterGradeMouseClicked
        registerNewGrade();
    }//GEN-LAST:event_labelRegisterGradeMouseClicked

    private void labelRemoveGradeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRemoveGradeMouseClicked
        removeGrade();
    }//GEN-LAST:event_labelRemoveGradeMouseClicked

    private void labelManageClassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelManageClassMouseClicked
        new ManageClass().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelManageClassMouseClicked

    private void labelBackToFirstPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBackToFirstPageMouseClicked
        new FirstPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelBackToFirstPageMouseClicked

    private void textGradeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textGradeKeyTyped
        ValidationController.NumbersOnlyTextFiled(evt);
    }//GEN-LAST:event_textGradeKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageGrade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelBackGround;
    private javax.swing.JLabel labelBackToFirstPage;
    private javax.swing.JLabel labelGade;
    private javax.swing.JLabel labelGadeId;
    private javax.swing.JLabel labelManageClass;
    private javax.swing.JLabel labelRegisterGrade;
    private javax.swing.JLabel labelRemoveGrade;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel panelBackGround;
    private javax.swing.JPanel panelManageGrade;
    private javax.swing.JPanel panelViewAllGrade;
    private javax.swing.JScrollPane scrollPaneViewAllGrade;
    private javax.swing.JTable tableViewAllGrade;
    private javax.swing.JTextField textGrade;
    private javax.swing.JTextField textGradeID;
    // End of variables declaration//GEN-END:variables

    private void searchGrade() {
        int gradeNumber=Integer.parseInt(textGrade.getText());
        try {
            Grade grade=GradeController.searchGrade(gradeNumber);
            if (grade!=null) {
                textGradeID.setText(grade.getGID());
            } else {
                generateGradeId();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void registerNewGrade() {
        if (checkAllTextField()) {
            Grade grade=new Grade(textGradeID.getText(), Integer.parseInt(textGrade.getText()));
            try {
                boolean isAdded=GradeController.addGrade(grade);
                if (isAdded) {
                    viewAllGrade();
                    JOptionPane.showMessageDialog(this, "New grade is added successly...");
                } else {
                    JOptionPane.showMessageDialog(this, "Added Fail...");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Grade ID is duplicated...");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Check whether you have fill all text field.");
        }
        
    }

    private void removeGrade() {
        String gradeId=textGradeID.getText();
        try {
            boolean isRemove=GradeController.deleteGrade(gradeId);
            if (isRemove) {
                viewAllGrade();
                JOptionPane.showMessageDialog(this, "Grade is deleted...");
            } else {
                JOptionPane.showMessageDialog(this, "Deleted Fail...");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void viewAllGrade() {
        try {
            allGrades=GradeController.viewGrade();
            DefaultTableModel defaultTableModel=(DefaultTableModel) tableViewAllGrade.getModel();
            defaultTableModel.setRowCount(0);
            for (Grade grade : allGrades) {
                Object[] rowData={grade.getGID(),grade.getGrade()};
                defaultTableModel.addRow(rowData);
            }           
        } catch (SQLException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checkAllTextField() {
        boolean fillGradeId=textGradeID.getText().isEmpty();
        boolean fillGrade=textGrade.getText().isEmpty();
        if (fillGradeId || fillGrade) {
            return false;
        } else {
            return true;
        }
    }

    private void generateGradeId() {
        String gradeId=null;
        try {
            gradeId=GenerateIdController.lastTableId("GID", "Grade");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageGrade.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (gradeId!=null) {
            int idLength=gradeId.length();
            String idNumber=gradeId.substring(1, idLength);
            int idNumberInteger=Integer.parseInt(idNumber);
            int nextNumber=idNumberInteger+1;
            if (nextNumber<10) {
                textGradeID.setText("g00"+nextNumber);
            }
            if (nextNumber>=10 & nextNumber<100) {
                textGradeID.setText("g0"+nextNumber);
            }
            if (nextNumber>=100) {
                textGradeID.setText("g"+nextNumber);
            }
        } else {
            textGradeID.setText("g001");
        }
    }
}
