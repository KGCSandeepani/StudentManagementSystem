/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.design;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import project.controller.GenerateIdController;
import project.controller.SubjectController;
import project.model.Subject;

/**
 *
 * @author 
 */
public class ManageSubject extends javax.swing.JFrame {

    /**
     * Creates new form ManageSubject
     */
    ArrayList<Subject> allSubjects;
    
    public ManageSubject() {
        initComponents();
        generateSubjectId();
        viewAllSubject();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackGround = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        panelManageSubject = new javax.swing.JPanel();
        labelSubjectName = new javax.swing.JLabel();
        labelSubjectId = new javax.swing.JLabel();
        textSubjectName = new javax.swing.JTextField();
        textSubjectId = new javax.swing.JTextField();
        labelRegisterSubject = new javax.swing.JLabel();
        labelModifySubject = new javax.swing.JLabel();
        labelRemoveSubject = new javax.swing.JLabel();
        labelDiscribeModifySuject = new javax.swing.JLabel();
        textModifySubjectName = new javax.swing.JTextField();
        panelViewSubject = new javax.swing.JPanel();
        scrollPaneViewAllSubject = new javax.swing.JScrollPane();
        tableViewAllSubject = new javax.swing.JTable();
        labelManageClass = new javax.swing.JLabel();
        labelBackToFirstPage = new javax.swing.JLabel();
        labelBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 0, 0));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Manage Subject");
        panelBackGround.add(labelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 460, 60));

        panelManageSubject.setBackground(new java.awt.Color(153, 153, 255));
        panelManageSubject.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Subject", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(0, 0, 102))); // NOI18N

        labelSubjectName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSubjectName.setText("Subject Name");

        labelSubjectId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSubjectId.setText("Subject ID");

        textSubjectName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textSubjectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSubjectNameActionPerformed(evt);
            }
        });
        textSubjectName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSubjectNameKeyReleased(evt);
            }
        });

        textSubjectId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        labelRegisterSubject.setBackground(new java.awt.Color(255, 0, 0));
        labelRegisterSubject.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelRegisterSubject.setForeground(new java.awt.Color(255, 255, 255));
        labelRegisterSubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRegisterSubject.setText("Register Subject");
        labelRegisterSubject.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelRegisterSubject.setOpaque(true);
        labelRegisterSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRegisterSubjectMouseClicked(evt);
            }
        });

        labelModifySubject.setBackground(new java.awt.Color(255, 0, 0));
        labelModifySubject.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelModifySubject.setForeground(new java.awt.Color(255, 255, 255));
        labelModifySubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelModifySubject.setText("Modify Subject");
        labelModifySubject.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelModifySubject.setOpaque(true);
        labelModifySubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelModifySubjectMouseClicked(evt);
            }
        });

        labelRemoveSubject.setBackground(new java.awt.Color(255, 0, 0));
        labelRemoveSubject.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelRemoveSubject.setForeground(new java.awt.Color(255, 255, 255));
        labelRemoveSubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRemoveSubject.setText("Remove Subject");
        labelRemoveSubject.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelRemoveSubject.setOpaque(true);
        labelRemoveSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRemoveSubjectMouseClicked(evt);
            }
        });

        labelDiscribeModifySuject.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelDiscribeModifySuject.setText("If you want to modify Subject Name, type new subject name below text field.");

        textModifySubjectName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textModifySubjectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textModifySubjectNameActionPerformed(evt);
            }
        });
        textModifySubjectName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textModifySubjectNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelManageSubjectLayout = new javax.swing.GroupLayout(panelManageSubject);
        panelManageSubject.setLayout(panelManageSubjectLayout);
        panelManageSubjectLayout.setHorizontalGroup(
            panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManageSubjectLayout.createSequentialGroup()
                .addGroup(panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelManageSubjectLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSubjectId, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textSubjectId, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textModifySubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelManageSubjectLayout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addGroup(panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelManageSubjectLayout.createSequentialGroup()
                                .addComponent(labelRegisterSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelModifySubject, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(labelRemoveSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelDiscribeModifySuject, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        panelManageSubjectLayout.setVerticalGroup(
            panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManageSubjectLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSubjectName)
                    .addComponent(textSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDiscribeModifySuject, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(textModifySubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSubjectId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSubjectId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(panelManageSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRemoveSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelModifySubject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRegisterSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        panelBackGround.add(panelManageSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 590, 400));

        panelViewSubject.setBackground(new java.awt.Color(153, 153, 255));
        panelViewSubject.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View All Subject", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(0, 0, 102))); // NOI18N

        tableViewAllSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject ID", "Subject Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollPaneViewAllSubject.setViewportView(tableViewAllSubject);
        if (tableViewAllSubject.getColumnModel().getColumnCount() > 0) {
            tableViewAllSubject.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        javax.swing.GroupLayout panelViewSubjectLayout = new javax.swing.GroupLayout(panelViewSubject);
        panelViewSubject.setLayout(panelViewSubjectLayout);
        panelViewSubjectLayout.setHorizontalGroup(
            panelViewSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewSubjectLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(scrollPaneViewAllSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        panelViewSubjectLayout.setVerticalGroup(
            panelViewSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewSubjectLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(scrollPaneViewAllSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        panelBackGround.add(panelViewSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 580, 400));

        labelManageClass.setBackground(new java.awt.Color(255, 0, 0));
        labelManageClass.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelManageClass.setForeground(new java.awt.Color(255, 255, 255));
        labelManageClass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelManageClass.setText("Manage Class");
        labelManageClass.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelManageClass.setOpaque(true);
        labelManageClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelManageClassMouseClicked(evt);
            }
        });
        panelBackGround.add(labelManageClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 590, 194, 40));

        labelBackToFirstPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gif/home-animated-blue-1.gif"))); // NOI18N
        labelBackToFirstPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBackToFirstPageMouseClicked(evt);
            }
        });
        panelBackGround.add(labelBackToFirstPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        labelBackGround.setBackground(new java.awt.Color(0, 0, 153));
        labelBackGround.setOpaque(true);
        panelBackGround.add(labelBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textSubjectNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSubjectNameKeyReleased
        searchSubjectBySubjectName();
    }//GEN-LAST:event_textSubjectNameKeyReleased

    private void textSubjectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSubjectNameActionPerformed
        textSubjectId.requestFocus();
    }//GEN-LAST:event_textSubjectNameActionPerformed

    private void labelRegisterSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRegisterSubjectMouseClicked
        addNewSubject();
    }//GEN-LAST:event_labelRegisterSubjectMouseClicked

    private void labelModifySubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelModifySubjectMouseClicked
        modifySubjectDetail();
    }//GEN-LAST:event_labelModifySubjectMouseClicked

    private void labelRemoveSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRemoveSubjectMouseClicked
        removeSubject();
    }//GEN-LAST:event_labelRemoveSubjectMouseClicked

    private void labelManageClassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelManageClassMouseClicked
        new ManageClass().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelManageClassMouseClicked

    private void labelBackToFirstPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBackToFirstPageMouseClicked
        new FirstPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelBackToFirstPageMouseClicked

    private void textModifySubjectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textModifySubjectNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textModifySubjectNameActionPerformed

    private void textModifySubjectNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textModifySubjectNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textModifySubjectNameKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageSubject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelBackGround;
    private javax.swing.JLabel labelBackToFirstPage;
    private javax.swing.JLabel labelDiscribeModifySuject;
    private javax.swing.JLabel labelManageClass;
    private javax.swing.JLabel labelModifySubject;
    private javax.swing.JLabel labelRegisterSubject;
    private javax.swing.JLabel labelRemoveSubject;
    private javax.swing.JLabel labelSubjectId;
    private javax.swing.JLabel labelSubjectName;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel panelBackGround;
    private javax.swing.JPanel panelManageSubject;
    private javax.swing.JPanel panelViewSubject;
    private javax.swing.JScrollPane scrollPaneViewAllSubject;
    private javax.swing.JTable tableViewAllSubject;
    private javax.swing.JTextField textModifySubjectName;
    private javax.swing.JTextField textSubjectId;
    private javax.swing.JTextField textSubjectName;
    // End of variables declaration//GEN-END:variables

    private void searchSubjectBySubjectName() {
        String subjectName=textSubjectName.getText();
        int index=subjectName.length();
        try {
            Subject subject=SubjectController.searchSubjectBySubjectName(subjectName);
            if (subject!=null) {
                textSubjectName.setText(subject.getSubjctName());
                textSubjectName.select(index, 30);
                textModifySubjectName.setText(subject.getSubjctName());
                textSubjectId.setText(subject.getSUID());
            } else{
                generateSubjectId();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addNewSubject() {
        if (checkAllTextField()) {
            String subjectId=textSubjectId.getText();
            String subjectName=textSubjectName.getText();
            Subject subject=new Subject(subjectId, subjectName);
            try {
                boolean isAdded=SubjectController.addSubject(subject);
                if (isAdded) {
                    DefaultTableModel defaultTableModel=(DefaultTableModel) tableViewAllSubject.getModel();
                    defaultTableModel.setRowCount(0);
                    viewAllSubject();
                    JOptionPane.showMessageDialog(this, "New subject is added successly...");
                } else {
                    JOptionPane.showMessageDialog(this, "Added Fail...");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Subject ID is duplicated...");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Check whether you have fill all text field.");
        }
        
    }

    private void modifySubjectDetail() {
        Subject subject=new Subject(textSubjectId.getText(), textModifySubjectName.getText());
        try {
            boolean isModify=SubjectController.updateSubject(subject);
            if (isModify) {
                viewAllSubject();
                JOptionPane.showMessageDialog(this, "Subject is updated successly...");
            } else {
                JOptionPane.showMessageDialog(this, "Update Fail...");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void removeSubject() {
        String subjectId=textSubjectId.getText();
        try {
            boolean isRemove=SubjectController.deleteSubject(subjectId);
            if (isRemove) {               
                viewAllSubject();
                JOptionPane.showMessageDialog(this, "Subject detail is deleted...");
            } else {
                JOptionPane.showMessageDialog(this, "Delete Fail...");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void viewAllSubject() {
        try {
            allSubjects=SubjectController.viewSubject();
            DefaultTableModel defaultTableModel=(DefaultTableModel) tableViewAllSubject.getModel();
            defaultTableModel.setRowCount(0);
            for (Subject subject : allSubjects) {
                Object[] rowData={subject.getSUID(),subject.getSubjctName()};
                defaultTableModel.addRow(rowData);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checkAllTextField() {
        boolean fillSubjectId=textSubjectId.getText().isEmpty();
        boolean fillSubjectName=textSubjectName.getText().isEmpty();
        if (fillSubjectId || fillSubjectName) {
            return false;
        } else {
            return true;
        }
    }

    private void generateSubjectId() {
        String subjectId=null;
        try {
            subjectId=GenerateIdController.lastTableId("SUID", "Subject");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubject.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (subjectId!=null) {
            int idLength=subjectId.length();
            String idNumber=subjectId.substring(2, idLength);
            int idNumberInteger=Integer.parseInt(idNumber);
            int nextNumber=idNumberInteger+1;
            if (nextNumber<10) {
                textSubjectId.setText("su00"+nextNumber);
            }
            if (nextNumber>=10 & nextNumber<100) {
                textSubjectId.setText("su0"+nextNumber);
            }
            if (nextNumber>=100) {
                textSubjectId.setText("su"+nextNumber);
            }
        } else {
            textSubjectId.setText("su001");
        }
    }
}
