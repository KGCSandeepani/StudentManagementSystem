/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.design;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import project.controller.ClassDetailController;
import project.controller.GenerateIdController;
import project.controller.PaymentController;
import project.controller.SessionController;
import project.controller.StudentController;
import project.controller.ValidationController;
import project.model.ClassDetail;
import project.model.Payment;
import project.model.Session;
import project.model.Student;

/**
 *
 * @author 
 */
public class SettlePayment extends javax.swing.JFrame {

    /**
     * Creates new form SettelPayment
     */
    public SettlePayment() {
        initComponents();
        generatePaymentId();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackGround = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        panelStudent = new javax.swing.JPanel();
        labelStudentId = new javax.swing.JLabel();
        labelStudentName = new javax.swing.JLabel();
        textStudentId = new javax.swing.JTextField();
        textStudentName = new javax.swing.JTextField();
        panelSelectClass = new javax.swing.JPanel();
        labelSubject = new javax.swing.JLabel();
        textClassId = new javax.swing.JTextField();
        labelGrade = new javax.swing.JLabel();
        labelTeacher = new javax.swing.JLabel();
        labelDay = new javax.swing.JLabel();
        labelPeriod = new javax.swing.JLabel();
        labelSubject1 = new javax.swing.JLabel();
        labelSubject2 = new javax.swing.JLabel();
        textSessionId = new javax.swing.JTextField();
        comboBoxSubject = new javax.swing.JComboBox();
        comboBoxGrade = new javax.swing.JComboBox();
        comboBoxTeacher = new javax.swing.JComboBox();
        comboBoxDay = new javax.swing.JComboBox();
        comboBoxPeriod = new javax.swing.JComboBox();
        labelLoadPaymentId = new javax.swing.JLabel();
        panelSettlePayment = new javax.swing.JPanel();
        labelPaymentId = new javax.swing.JLabel();
        textPaymentId = new javax.swing.JTextField();
        labelFee = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        textDate = new javax.swing.JTextField();
        scrollPanePayment = new javax.swing.JScrollPane();
        tablePayment = new javax.swing.JTable();
        labelSettlePayment = new javax.swing.JLabel();
        textFee = new javax.swing.JTextField();
        labelBackToFirstPage = new javax.swing.JLabel();
        labelBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 0, 0));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Settle Student Payment");
        panelBackGround.add(labelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 710, 60));

        panelStudent.setBackground(new java.awt.Color(153, 153, 255));
        panelStudent.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Student", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(0, 0, 102))); // NOI18N

        labelStudentId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelStudentId.setText("Student ID");

        labelStudentName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelStudentName.setText("Student Name");

        textStudentId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textStudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStudentIdActionPerformed(evt);
            }
        });

        textStudentName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textStudentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStudentNameActionPerformed(evt);
            }
        });
        textStudentName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textStudentNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelStudentLayout = new javax.swing.GroupLayout(panelStudent);
        panelStudent.setLayout(panelStudentLayout);
        panelStudentLayout.setHorizontalGroup(
            panelStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStudentLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(labelStudentName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        panelStudentLayout.setVerticalGroup(
            panelStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStudentLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStudentId)
                    .addComponent(textStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelStudentName)
                    .addComponent(textStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        panelBackGround.add(panelStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 700, 130));

        panelSelectClass.setBackground(new java.awt.Color(153, 153, 255));
        panelSelectClass.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Class", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(0, 0, 102))); // NOI18N

        labelSubject.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSubject.setText("Subject");

        textClassId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textClassId.setEnabled(false);

        labelGrade.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelGrade.setText("Grade");

        labelTeacher.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelTeacher.setText("Teacher");

        labelDay.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelDay.setText("Day");

        labelPeriod.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelPeriod.setText("Period");

        labelSubject1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSubject1.setText("Class ID");

        labelSubject2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSubject2.setText("Session ID");

        textSessionId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textSessionId.setEnabled(false);

        comboBoxSubject.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxSubjectItemStateChanged(evt);
            }
        });

        comboBoxGrade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxGrade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxGradeItemStateChanged(evt);
            }
        });

        comboBoxTeacher.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxTeacher.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxTeacherItemStateChanged(evt);
            }
        });

        comboBoxDay.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxDay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDayItemStateChanged(evt);
            }
        });

        comboBoxPeriod.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxPeriod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxPeriodItemStateChanged(evt);
            }
        });

        labelLoadPaymentId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/forward-button-icon-51704.png"))); // NOI18N
        labelLoadPaymentId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelLoadPaymentIdMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelSelectClassLayout = new javax.swing.GroupLayout(panelSelectClass);
        panelSelectClass.setLayout(panelSelectClassLayout);
        panelSelectClassLayout.setHorizontalGroup(
            panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSelectClassLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelGrade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                    .addComponent(labelDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSelectClassLayout.createSequentialGroup()
                        .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelSubject2, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(labelSubject1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textClassId, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(textSessionId))
                        .addGap(45, 45, 45))
                    .addGroup(panelSelectClassLayout.createSequentialGroup()
                        .addComponent(comboBoxTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelSelectClassLayout.createSequentialGroup()
                        .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelLoadPaymentId)
                        .addGap(86, 86, 86))))
        );
        panelSelectClassLayout.setVerticalGroup(
            panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSelectClassLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSubject)
                    .addComponent(textClassId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSubject1)
                    .addComponent(comboBoxSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGrade)
                    .addComponent(comboBoxGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSubject2)
                    .addComponent(textSessionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTeacher)
                    .addComponent(comboBoxTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSelectClassLayout.createSequentialGroup()
                        .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelDay)
                            .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelSelectClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPeriod)))
                    .addComponent(labelLoadPaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        panelBackGround.add(panelSelectClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 700, 440));

        panelSettlePayment.setBackground(new java.awt.Color(153, 153, 255));
        panelSettlePayment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Settle Payment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(0, 0, 102))); // NOI18N

        labelPaymentId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelPaymentId.setText("Payment ID");

        textPaymentId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textPaymentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPaymentIdActionPerformed(evt);
            }
        });

        labelFee.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelFee.setText("Fee");

        labelDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelDate.setText("Date");

        textDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        tablePayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment ID", "Fee", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollPanePayment.setViewportView(tablePayment);

        labelSettlePayment.setBackground(new java.awt.Color(255, 0, 0));
        labelSettlePayment.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelSettlePayment.setForeground(new java.awt.Color(255, 255, 255));
        labelSettlePayment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSettlePayment.setText("Settle Payment");
        labelSettlePayment.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        labelSettlePayment.setOpaque(true);
        labelSettlePayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelSettlePaymentMouseClicked(evt);
            }
        });

        textFee.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFeeActionPerformed(evt);
            }
        });
        textFee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFeeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelSettlePaymentLayout = new javax.swing.GroupLayout(panelSettlePayment);
        panelSettlePayment.setLayout(panelSettlePaymentLayout);
        panelSettlePaymentLayout.setHorizontalGroup(
            panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSettlePaymentLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSettlePaymentLayout.createSequentialGroup()
                        .addComponent(labelPaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSettlePaymentLayout.createSequentialGroup()
                        .addGroup(panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelFee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textDate, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(textFee))))
                .addGap(0, 158, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSettlePaymentLayout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(scrollPanePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(panelSettlePaymentLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(labelSettlePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSettlePaymentLayout.setVerticalGroup(
            panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSettlePaymentLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPaymentId)
                    .addComponent(textPaymentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFee)
                    .addComponent(textFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSettlePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDate)
                    .addComponent(textDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(labelSettlePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(scrollPanePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        panelBackGround.add(panelSettlePayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 500, 600));

        labelBackToFirstPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gif/home-animated-blue-1.gif"))); // NOI18N
        labelBackToFirstPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBackToFirstPageMouseClicked(evt);
            }
        });
        panelBackGround.add(labelBackToFirstPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        labelBackGround.setBackground(new java.awt.Color(0, 0, 153));
        labelBackGround.setOpaque(true);
        panelBackGround.add(labelBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 800));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textStudentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textStudentIdActionPerformed
        searchStudentByStudentId();
        comboBoxSubject.removeAllItems();
        getSession();
    }//GEN-LAST:event_textStudentIdActionPerformed

    private void textStudentNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textStudentNameKeyReleased
        searchStudentByStudentName();
    }//GEN-LAST:event_textStudentNameKeyReleased

    private void comboBoxSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxSubjectItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        comboBoxGrade.removeAllItems();
        ArrayList<Integer> grades;
        try {
            grades=ClassDetailController.searchClassDetailBySubject(subject);
            for (int grade : grades) {
                comboBoxGrade.addItem(grade+"");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxSubjectItemStateChanged

    private void comboBoxGradeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxGradeItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade= (String) comboBoxGrade.getSelectedItem();
        comboBoxTeacher.removeAllItems();
        ArrayList<String> teachers;
        try {
            teachers=ClassDetailController.searchClassDetailBySubjectGrade(subject, grade);
            for (String teacher : teachers) {
                comboBoxTeacher.addItem(teacher);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxGradeItemStateChanged

    private void comboBoxTeacherItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxTeacherItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade=(String) comboBoxGrade.getSelectedItem();
        String teacher=(String) comboBoxTeacher.getSelectedItem();
        comboBoxDay.removeAllItems();
        ArrayList<String> dayList;
        try {
            dayList=ClassDetailController.searchClassDetailBySubjectGradeTeacher(subject, grade, teacher);
            for (String day : dayList) {
                comboBoxDay.addItem(day);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxTeacherItemStateChanged

    private void comboBoxPeriodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxPeriodItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade=(String) comboBoxGrade.getSelectedItem();
        String teacher=(String) comboBoxTeacher.getSelectedItem();
        String day=(String) comboBoxDay.getSelectedItem();
        String periode=(String) comboBoxPeriod.getSelectedItem();
        try {
            String ClassId=ClassDetailController.searchClassDetailBySubjectGradeTeacherDayPeriod(subject, grade, teacher, day, periode);
            textClassId.setText(ClassId);            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxPeriodItemStateChanged

    private void labelLoadPaymentIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelLoadPaymentIdMouseClicked
        getSessionId();
        getAllPayment();  
        textFee.requestFocus();
    }//GEN-LAST:event_labelLoadPaymentIdMouseClicked

    private void textPaymentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPaymentIdActionPerformed
        textFee.requestFocus();
    }//GEN-LAST:event_textPaymentIdActionPerformed

    private void labelSettlePaymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSettlePaymentMouseClicked
        settlePayment();
        generatePaymentId();
    }//GEN-LAST:event_labelSettlePaymentMouseClicked

    private void textFeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFeeKeyTyped
        ValidationController.decimalNumbersOnlyTextFiled(evt);
    }//GEN-LAST:event_textFeeKeyTyped

    private void textFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFeeActionPerformed
        textDate.requestFocus();
    }//GEN-LAST:event_textFeeActionPerformed

    private void comboBoxDayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDayItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade=(String) comboBoxGrade.getSelectedItem();
        String teacher=(String) comboBoxTeacher.getSelectedItem();
        String day=(String) comboBoxDay.getSelectedItem();
        comboBoxPeriod.removeAllItems();
        ArrayList<String> periodList;
        try {
            periodList=ClassDetailController.searchClassDetailBySubjectGradeTeacherDay(subject, grade, teacher, day);
            for (String period : periodList) {
                comboBoxPeriod.addItem(period);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxDayItemStateChanged

    private void labelBackToFirstPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBackToFirstPageMouseClicked
        new FirstPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelBackToFirstPageMouseClicked

    private void textStudentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textStudentNameActionPerformed
        getSession();
    }//GEN-LAST:event_textStudentNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettlePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettlePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettlePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettlePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettlePayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboBoxDay;
    private javax.swing.JComboBox comboBoxGrade;
    private javax.swing.JComboBox comboBoxPeriod;
    private javax.swing.JComboBox comboBoxSubject;
    private javax.swing.JComboBox comboBoxTeacher;
    private javax.swing.JLabel labelBackGround;
    private javax.swing.JLabel labelBackToFirstPage;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelDay;
    private javax.swing.JLabel labelFee;
    private javax.swing.JLabel labelGrade;
    private javax.swing.JLabel labelLoadPaymentId;
    private javax.swing.JLabel labelPaymentId;
    private javax.swing.JLabel labelPeriod;
    private javax.swing.JLabel labelSettlePayment;
    private javax.swing.JLabel labelStudentId;
    private javax.swing.JLabel labelStudentName;
    private javax.swing.JLabel labelSubject;
    private javax.swing.JLabel labelSubject1;
    private javax.swing.JLabel labelSubject2;
    private javax.swing.JLabel labelTeacher;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel panelBackGround;
    private javax.swing.JPanel panelSelectClass;
    private javax.swing.JPanel panelSettlePayment;
    private javax.swing.JPanel panelStudent;
    private javax.swing.JScrollPane scrollPanePayment;
    private javax.swing.JTable tablePayment;
    private javax.swing.JTextField textClassId;
    private javax.swing.JTextField textDate;
    private javax.swing.JTextField textFee;
    private javax.swing.JTextField textPaymentId;
    private javax.swing.JTextField textSessionId;
    private javax.swing.JTextField textStudentId;
    private javax.swing.JTextField textStudentName;
    // End of variables declaration//GEN-END:variables

    private void searchStudentByStudentId() {
        String studentId=textStudentId.getText();
        try {
            Student student=StudentController.searchStudent(studentId);
            if (student!=null) {
                textStudentName.setText(student.getName());
            } else {
                JOptionPane.showMessageDialog(this, "Wrong Student ID!\nEnter correct Student ID");
                textStudentName.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchStudentByStudentName() {
        String name=textStudentName.getText();
        int index=name.length();
        try {
            Student student=StudentController.searchStudentByName(name);
            if (student!=null) {
                textStudentName.setText(student.getName());
                textStudentName.select(index, 30);
                textStudentId.setText(student.getSID());
            } else {
                textStudentId.setText("");                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllClassSubjectToArray(String sessionId) {
        String subjectName;
        try {
            subjectName=ClassDetailController.searchSubjectBySEID(sessionId);            
            comboBoxSubject.addItem(subjectName);           
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getSession() {
        String StudentId=textStudentId.getText();
        ArrayList<Session> allSessions;
        try {
            allSessions=SessionController.searchSessionFromSID(StudentId);
            for (Session session : allSessions) {
                String sessionId=session.getSEID();
                loadAllClassSubjectToArray(sessionId);
                setDate();
            }                                     
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getAllPayment() {
        String sessionId=textSessionId.getText();
        ArrayList<Payment> allPayment;
        try {
            allPayment=PaymentController.viewPayment(sessionId);
            DefaultTableModel defaultTableModel=(DefaultTableModel) tablePayment.getModel();
            defaultTableModel.setRowCount(0);
            for (Payment payment : allPayment) {
                Object[] rowData={payment.getPID(),payment.getFee(),payment.getDate()};
                defaultTableModel.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDate() {
        SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
        String date=dateFormat.format(new Date());
        textDate.setText(date);
    }

    private void settlePayment() {
        if (checkAllTextField()) {
            String sessionId=textSessionId.getText();
            String paymentId=textPaymentId.getText();
            double fee=Double.parseDouble(textFee.getText());
            String date=textDate.getText();
            Payment payment=new Payment(sessionId, paymentId, fee, date);
            try {
                boolean isSettlePayment=PaymentController.addPayment(payment);
                if (isSettlePayment) {
                    DefaultTableModel defaultTableModel=(DefaultTableModel) tablePayment.getModel();
                    Object[] rowData={paymentId, fee, date};
                    defaultTableModel.addRow(rowData);
                    JOptionPane.showMessageDialog(this, "Settle payment successly...");
                } else {
                    JOptionPane.showMessageDialog(this, "Settle payment Fail...");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Payment ID is duplicated!\nPlease enter correct Payment Id.");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Check whether you have fill all text field.");
        }
        
    }

    private boolean checkAllTextField() {
        boolean fillSessionId=textSessionId.getText().isEmpty();
        boolean fillPaymentId=textPaymentId.getText().isEmpty();
        boolean fillFee=textFee.getText().isEmpty();
        boolean fillDate=textDate.getText().isEmpty();
        if (fillSessionId || fillPaymentId || fillFee || fillDate) {
            return false;
        } else {
            return true;
        }
    }

    private void getSessionId() {
        String studentId=textStudentId.getText();
        String classId=textClassId.getText();
        try {
            Session session=SessionController.searchSession(studentId, classId);
            textSessionId.setText(session.getSEID());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void generatePaymentId() {
        String paymentId=null;
        try {
            paymentId=GenerateIdController.lastTableId("PID", "Payment");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SettlePayment.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (paymentId!=null) {
            int idLength=paymentId.length();
            String idNumber=paymentId.substring(1, idLength);
            int idNumberInteger=Integer.parseInt(idNumber);
            int nextNumber=idNumberInteger+1;
            if (nextNumber<10) {
                textPaymentId.setText("p00"+nextNumber);
            }
            if (nextNumber>=10 & nextNumber<100) {
                textPaymentId.setText("p0"+nextNumber);
            }
            if (nextNumber>=100) {
                textPaymentId.setText("p"+nextNumber);
            }
        } else {
            textPaymentId.setText("p001");
        }
    }
}
