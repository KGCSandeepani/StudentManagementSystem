/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.design;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import project.controller.AttendanceController;
import project.controller.ClassDetailController;
import project.controller.GenerateIdController;
import project.controller.SessionController;
import project.controller.StudentController;
import project.model.Attendance;
import project.model.Session;
import project.model.Student;

/**
 *
 * @author 
 */
public class MarkAttendance extends javax.swing.JFrame {

    /**
     * Creates new form MarkAttendance
     */
    
    
    public MarkAttendance() {
        initComponents();  
        generateAttendanceId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackGround = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        panelSelectStudent = new javax.swing.JPanel();
        labelStudentId = new javax.swing.JLabel();
        textStudentId = new javax.swing.JTextField();
        labelStudentName = new javax.swing.JLabel();
        textStudentName = new javax.swing.JTextField();
        panelClassDetail = new javax.swing.JPanel();
        labelSubject = new javax.swing.JLabel();
        labelGrade = new javax.swing.JLabel();
        labelTeacher = new javax.swing.JLabel();
        labelDay = new javax.swing.JLabel();
        labelPeriod = new javax.swing.JLabel();
        comboBoxSubject = new javax.swing.JComboBox();
        comboBoxGrade = new javax.swing.JComboBox();
        comboBoxTeacher = new javax.swing.JComboBox();
        comboBoxDay = new javax.swing.JComboBox();
        comboBoxPeriod = new javax.swing.JComboBox();
        labelClassId = new javax.swing.JLabel();
        labelSessionId = new javax.swing.JLabel();
        textClassId = new javax.swing.JTextField();
        textSessionId = new javax.swing.JTextField();
        labelGetSessionId = new javax.swing.JLabel();
        panelMarkAttendance = new javax.swing.JPanel();
        labelAttendanceId = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        textAttendanceId = new javax.swing.JTextField();
        textDate = new javax.swing.JTextField();
        labelMarkAttendance = new javax.swing.JLabel();
        scrollPaneAttendance = new javax.swing.JScrollPane();
        tableAttendance = new javax.swing.JTable();
        labelSettlePayment = new javax.swing.JLabel();
        labelBackToFirstPage = new javax.swing.JLabel();
        labelBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelBackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 0, 0));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Mark Student Attendance");
        panelBackGround.add(labelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 710, 60));

        panelSelectStudent.setBackground(new java.awt.Color(153, 153, 255));
        panelSelectStudent.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Student", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24))); // NOI18N

        labelStudentId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelStudentId.setText("Student ID");

        textStudentId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textStudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStudentIdActionPerformed(evt);
            }
        });

        labelStudentName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelStudentName.setText("Student Name");

        textStudentName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textStudentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStudentNameActionPerformed(evt);
            }
        });
        textStudentName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textStudentNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelSelectStudentLayout = new javax.swing.GroupLayout(panelSelectStudent);
        panelSelectStudent.setLayout(panelSelectStudentLayout);
        panelSelectStudentLayout.setHorizontalGroup(
            panelSelectStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSelectStudentLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(labelStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(labelStudentName)
                .addGap(18, 18, 18)
                .addComponent(textStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelSelectStudentLayout.setVerticalGroup(
            panelSelectStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSelectStudentLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelSelectStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStudentId)
                    .addComponent(textStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelStudentName))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        panelBackGround.add(panelSelectStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 780, 120));

        panelClassDetail.setBackground(new java.awt.Color(153, 153, 255));
        panelClassDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Class Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24))); // NOI18N

        labelSubject.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSubject.setText("Subject");

        labelGrade.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelGrade.setText("Grade");

        labelTeacher.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelTeacher.setText("Teacher");

        labelDay.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelDay.setText("Day");

        labelPeriod.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelPeriod.setText("Period");

        comboBoxSubject.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxSubjectItemStateChanged(evt);
            }
        });

        comboBoxGrade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxGradeActionPerformed(evt);
            }
        });

        comboBoxTeacher.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTeacherActionPerformed(evt);
            }
        });

        comboBoxDay.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxDay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDayItemStateChanged(evt);
            }
        });

        comboBoxPeriod.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxPeriod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxPeriodItemStateChanged(evt);
            }
        });
        comboBoxPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPeriodActionPerformed(evt);
            }
        });

        labelClassId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelClassId.setText("Class ID");

        labelSessionId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSessionId.setText("Session ID");

        textClassId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textClassId.setEnabled(false);

        textSessionId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textSessionId.setEnabled(false);

        labelGetSessionId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/forward-button-icon-51704.png"))); // NOI18N
        labelGetSessionId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelGetSessionIdMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelClassDetailLayout = new javax.swing.GroupLayout(panelClassDetail);
        panelClassDetail.setLayout(panelClassDetailLayout);
        panelClassDetailLayout.setHorizontalGroup(
            panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClassDetailLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelGrade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTeacher, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(labelDay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPeriod, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClassDetailLayout.createSequentialGroup()
                        .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelClassDetailLayout.createSequentialGroup()
                                .addComponent(comboBoxSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(133, 133, 133)
                                .addComponent(labelClassId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelClassDetailLayout.createSequentialGroup()
                                .addComponent(comboBoxGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(220, 220, 220)
                                .addComponent(labelSessionId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textClassId, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSessionId, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))
                    .addGroup(panelClassDetailLayout.createSequentialGroup()
                        .addComponent(comboBoxTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelClassDetailLayout.createSequentialGroup()
                        .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelGetSessionId, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157))))
        );
        panelClassDetailLayout.setVerticalGroup(
            panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClassDetailLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSubject)
                    .addComponent(comboBoxSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelClassId)
                    .addComponent(textClassId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGrade)
                    .addComponent(comboBoxGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSessionId)
                    .addComponent(textSessionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelClassDetailLayout.createSequentialGroup()
                        .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelTeacher)
                            .addComponent(comboBoxTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelDay)
                            .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelClassDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPeriod)
                            .addComponent(comboBoxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(labelGetSessionId))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        panelBackGround.add(panelClassDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 780, 400));

        panelMarkAttendance.setBackground(new java.awt.Color(153, 153, 255));
        panelMarkAttendance.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mark Attendance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 24), new java.awt.Color(51, 51, 51))); // NOI18N

        labelAttendanceId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelAttendanceId.setText("Attendance ID");

        labelDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelDate.setText("Date");

        textAttendanceId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        textDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        textDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDateActionPerformed(evt);
            }
        });

        labelMarkAttendance.setBackground(new java.awt.Color(255, 0, 0));
        labelMarkAttendance.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelMarkAttendance.setForeground(new java.awt.Color(255, 255, 255));
        labelMarkAttendance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMarkAttendance.setText("Mark Attendance");
        labelMarkAttendance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        labelMarkAttendance.setOpaque(true);
        labelMarkAttendance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelMarkAttendanceMouseClicked(evt);
            }
        });

        tableAttendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Attendance ID", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrollPaneAttendance.setViewportView(tableAttendance);

        javax.swing.GroupLayout panelMarkAttendanceLayout = new javax.swing.GroupLayout(panelMarkAttendance);
        panelMarkAttendance.setLayout(panelMarkAttendanceLayout);
        panelMarkAttendanceLayout.setHorizontalGroup(
            panelMarkAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMarkAttendanceLayout.createSequentialGroup()
                .addGroup(panelMarkAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMarkAttendanceLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(panelMarkAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelAttendanceId, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(labelDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panelMarkAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textAttendanceId, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textDate, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelMarkAttendanceLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(scrollPaneAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMarkAttendanceLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(labelMarkAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        panelMarkAttendanceLayout.setVerticalGroup(
            panelMarkAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMarkAttendanceLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelMarkAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAttendanceId)
                    .addComponent(textAttendanceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMarkAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDate)
                    .addComponent(textDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(labelMarkAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(scrollPaneAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        panelBackGround.add(panelMarkAttendance, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 170, 460, 440));

        labelSettlePayment.setBackground(new java.awt.Color(255, 0, 0));
        labelSettlePayment.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelSettlePayment.setForeground(new java.awt.Color(255, 255, 255));
        labelSettlePayment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSettlePayment.setText("Settle Payment");
        labelSettlePayment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        labelSettlePayment.setOpaque(true);
        labelSettlePayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelSettlePaymentMouseClicked(evt);
            }
        });
        panelBackGround.add(labelSettlePayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 640, 187, 30));

        labelBackToFirstPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gif/home-animated-blue-1.gif"))); // NOI18N
        labelBackToFirstPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBackToFirstPageMouseClicked(evt);
            }
        });
        panelBackGround.add(labelBackToFirstPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        labelBackGround.setBackground(new java.awt.Color(0, 0, 153));
        labelBackGround.setOpaque(true);
        panelBackGround.add(labelBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDateActionPerformed

    private void textStudentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textStudentIdActionPerformed
        searchStudentBySID();
        comboBoxSubject.removeAllItems();
        getSession();
    }//GEN-LAST:event_textStudentIdActionPerformed

    private void textStudentNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textStudentNameKeyReleased
        seachStudentByName();
    }//GEN-LAST:event_textStudentNameKeyReleased

    private void comboBoxSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxSubjectItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        comboBoxGrade.removeAllItems();
        ArrayList<Integer> grades;
        try {
            grades=ClassDetailController.searchClassDetailBySubject(subject);
            for (int grade : grades) {
                comboBoxGrade.addItem(Integer.toString(grade));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxSubjectItemStateChanged

    private void comboBoxGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxGradeActionPerformed
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade= (String) comboBoxGrade.getSelectedItem();
        comboBoxTeacher.removeAllItems();
        ArrayList<String> teachersList;
        try {
            teachersList=ClassDetailController.searchClassDetailBySubjectGrade(subject, grade);
            for (String teacher : teachersList) {
                comboBoxTeacher.addItem(teacher);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxGradeActionPerformed

    private void comboBoxTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTeacherActionPerformed
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade=(String) comboBoxGrade.getSelectedItem();
        String teacher=(String) comboBoxTeacher.getSelectedItem();
        comboBoxDay.removeAllItems();
        ArrayList<String> dayList;
        try {
            dayList=ClassDetailController.searchClassDetailBySubjectGradeTeacher(subject, grade, teacher);
            for (String day : dayList) {
                comboBoxDay.addItem(day);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxTeacherActionPerformed

    private void comboBoxPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPeriodActionPerformed
        
    }//GEN-LAST:event_comboBoxPeriodActionPerformed

    private void comboBoxPeriodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxPeriodItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade=(String) comboBoxGrade.getSelectedItem();
        String teacher=(String) comboBoxTeacher.getSelectedItem();
        String day=(String) comboBoxDay.getSelectedItem();
        String period=(String) comboBoxPeriod.getSelectedItem();
        try {
            String classId=ClassDetailController.searchClassDetailBySubjectGradeTeacherDayPeriod(subject, grade, teacher, day, period);
            textClassId.setText(classId);            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_comboBoxPeriodItemStateChanged

    private void labelGetSessionIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelGetSessionIdMouseClicked
        getSessionId();
        getAllAttendance();
        textDate.requestFocus();
    }//GEN-LAST:event_labelGetSessionIdMouseClicked

    private void labelMarkAttendanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelMarkAttendanceMouseClicked
        markAttendance();  
        generateAttendanceId();
    }//GEN-LAST:event_labelMarkAttendanceMouseClicked

    private void labelSettlePaymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSettlePaymentMouseClicked
        new SettlePayment().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelSettlePaymentMouseClicked

    private void comboBoxDayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDayItemStateChanged
        String subject=(String) comboBoxSubject.getSelectedItem();
        String grade=(String) comboBoxGrade.getSelectedItem();
        String teacher=(String) comboBoxTeacher.getSelectedItem();
        String day=(String) comboBoxDay.getSelectedItem();
        comboBoxPeriod.removeAllItems();
        ArrayList<String> periodList;
        try {
            periodList=ClassDetailController.searchClassDetailBySubjectGradeTeacherDay(subject, grade, teacher, day);
            for (String period : periodList) {
                comboBoxPeriod.addItem(period);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxDayItemStateChanged

    private void labelBackToFirstPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBackToFirstPageMouseClicked
        new FirstPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelBackToFirstPageMouseClicked

    private void textStudentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textStudentNameActionPerformed
        getSession();
    }//GEN-LAST:event_textStudentNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboBoxDay;
    private javax.swing.JComboBox comboBoxGrade;
    private javax.swing.JComboBox comboBoxPeriod;
    private javax.swing.JComboBox comboBoxSubject;
    private javax.swing.JComboBox comboBoxTeacher;
    private javax.swing.JLabel labelAttendanceId;
    private javax.swing.JLabel labelBackGround;
    private javax.swing.JLabel labelBackToFirstPage;
    private javax.swing.JLabel labelClassId;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelDay;
    private javax.swing.JLabel labelGetSessionId;
    private javax.swing.JLabel labelGrade;
    private javax.swing.JLabel labelMarkAttendance;
    private javax.swing.JLabel labelPeriod;
    private javax.swing.JLabel labelSessionId;
    private javax.swing.JLabel labelSettlePayment;
    private javax.swing.JLabel labelStudentId;
    private javax.swing.JLabel labelStudentName;
    private javax.swing.JLabel labelSubject;
    private javax.swing.JLabel labelTeacher;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel panelBackGround;
    private javax.swing.JPanel panelClassDetail;
    private javax.swing.JPanel panelMarkAttendance;
    private javax.swing.JPanel panelSelectStudent;
    private javax.swing.JScrollPane scrollPaneAttendance;
    private javax.swing.JTable tableAttendance;
    private javax.swing.JTextField textAttendanceId;
    private javax.swing.JTextField textClassId;
    private javax.swing.JTextField textDate;
    private javax.swing.JTextField textSessionId;
    private javax.swing.JTextField textStudentId;
    private javax.swing.JTextField textStudentName;
    // End of variables declaration//GEN-END:variables

    private void searchStudentBySID() {
        String sid=textStudentId.getText();
        try {
            Student student=StudentController.searchStudent(sid);
            if (student!=null) {
                textStudentName.setText(student.getName());
            } else {
                JOptionPane.showMessageDialog(this, "Wrong Student ID!\nEnter correct Student ID");
                textStudentName.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void seachStudentByName() {
        String name=textStudentName.getText();
        int index=name.length();
        try {
            Student student=StudentController.searchStudentByName(name);
            if (student!=null) {
                textStudentName.setText(student.getName());
                textStudentName.select(index, 30);
                textStudentId.setText(student.getSID());
            } else {
                textStudentId.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllClassSubjectToArray(String sessionId) {
        String subjectName;
        try {
            subjectName=ClassDetailController.searchSubjectBySEID(sessionId);            
            comboBoxSubject.addItem(subjectName);           
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getSession() {
        String studentId=textStudentId.getText();        
        ArrayList<Session> allSessions;
        try {
            allSessions=SessionController.searchSessionFromSID(studentId);
            for (Session session : allSessions) {
                String sessionId=session.getSEID();
                loadAllClassSubjectToArray(sessionId);               
                getDate();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getAllAttendance() {
        String sessionId=textSessionId.getText();
        ArrayList<Attendance> attendanceList;
        try {
            attendanceList=AttendanceController.viewAttendanceOfSEID(sessionId);
            DefaultTableModel defaultTableModel=(DefaultTableModel) tableAttendance.getModel();
            defaultTableModel.setRowCount(0);
            for (Attendance attendance : attendanceList) {
                Object[] rowData={attendance.getAID(),attendance.getDate()};
                defaultTableModel.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getDate() {
        SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
        String date=dateFormat.format(new Date());
        textDate.setText(date);
    }

    private void markAttendance() {
        if (checkAllTextField()) {
            Attendance attendance=new Attendance(textSessionId.getText(), textAttendanceId.getText(), textDate.getText());
            try {
                boolean isAdded=AttendanceController.addAttendance(attendance);
                if (isAdded) {
                    DefaultTableModel defaultTableModel=(DefaultTableModel) tableAttendance.getModel();
                    Object[] rowData={attendance.getAID(),attendance.getDate()};
                    defaultTableModel.addRow(rowData);
                    JOptionPane.showMessageDialog(this, "Add Attendance...");                
                } else {
                    JOptionPane.showMessageDialog(this, "Added Fail...");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Attendance ID is duplicated!\nPlease enter correct Attendance ID...");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Check whether you have filled all text field");
        }
        
    }

    private boolean checkAllTextField() {
        boolean fillSessionId=textSessionId.getText().isEmpty();
        boolean fillAttendanceId=textAttendanceId.getText().isEmpty();
        boolean fillDate=textDate.getText().isEmpty();
        if (fillSessionId || fillAttendanceId ||fillDate) {
            return false;
        } else {
            return true;
        }
    }

    private void getSessionId() {
        String studentId=textStudentId.getText();
        String classId=textClassId.getText();
        try {
            Session session=SessionController.searchSession(studentId, classId);
            textSessionId.setText(session.getSEID());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void generateAttendanceId() {
        String attendanceId=null;
        try {
            attendanceId=GenerateIdController.lastTableId("AID", "Attendance");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (attendanceId!=null) {
            int idLenght=attendanceId.length();
            String idNumber=attendanceId.substring(1, idLenght);
            int idNumberInteger=Integer.parseInt(idNumber);
            int nextNumber=idNumberInteger+1;
            if (nextNumber<10) {
                textAttendanceId.setText("a00"+nextNumber);
            }
            if (nextNumber>=10 & nextNumber<100) {
                textAttendanceId.setText("a0"+nextNumber);
            }
            if (nextNumber>=100) {
                textAttendanceId.setText("a"+nextNumber);
            }
        } else {
            textAttendanceId.setText("a001");
        }
    }
}
